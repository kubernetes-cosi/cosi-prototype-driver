apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: objectbuckets.objectbucket.io
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.storageClassName
    description: StorageClass
    name: StorageClass
    type: string
  - JSONPath: .spec.claimRef.namespace
    description: ClaimNamespace
    name: ClaimNamespace
    type: string
  - JSONPath: .spec.claimRef.name
    description: ClaimName
    name: ClaimName
    type: string
  - JSONPath: .spec.reclaimPolicy
    description: ReclaimPolicy
    name: ReclaimPolicy
    type: string
  - JSONPath: .status.phase
    description: Phase
    name: Phase
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: Age
    type: date
  group: objectbucket.io
  names:
    kind: ObjectBucket
    listKind: ObjectBucketList
    plural: objectbuckets
    singular: objectbucket
  scope: Namespaced
  subresources: {}
  validation:
    openAPIV3Schema:
      description: ObjectBucket is the Schema for the objectbuckets API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ObjectBucketSpec defines the desired state of ObjectBucket.
            Fields defined here should be normal among all providers. Authentication
            must be of a type defined in this package to pass type checks in reconciler
          properties:
            additionalState:
              additionalProperties:
                type: string
              type: object
            bucketClassName:
              type: string
            bucketClassNamespace:
              type: string
            claimRef:
              description: ObjectReference contains enough information to let you
                inspect or modify the referred object.
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            endpoint:
              description: Endpoint contains all connection relevant data that an
                app may require for accessing the bucket
              properties:
                additionalConfig:
                  additionalProperties:
                    type: string
                  type: object
                bucketHost:
                  type: string
                bucketName:
                  type: string
                bucketPort:
                  type: integer
                region:
                  type: string
                subRegion:
                  type: string
              required:
              - additionalConfig
              - bucketHost
              - bucketName
              - bucketPort
              - region
              - subRegion
              type: object
            releasePolicy:
              description: ObjectBucketReleasePolicy describes cleanup actions to
                be taken when an OB is deleted.
              type: string
          required:
          - additionalState
          - bucketClassName
          - bucketClassNamespace
          - claimRef
          - endpoint
          - releasePolicy
          type: object
        status:
          description: ObjectBucketStatus defines the observed state of ObjectBucket
          properties:
            phase:
              description: ObjectBucketStatusPhase is set by the controller to save
                the state of the provisioning process.
              type: string
          required:
          - phase
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
